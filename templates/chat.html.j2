{% set this_page = "chat" %}
{% extends "layout.html.j2" %}

{% block title %}Chat | MeshInfo{% endblock %}

{% block content %}
<div class="container pt-3">
  <h5>Chat</h5>
  <p class="mb-2">
    Posledních 100 zpráv z chatu. (Aktualizuje se po 15s)
  </p>
  <div class="table-responsive">
    <table class="table table-striped table-bordered">
      <thead>
        <tr>
          <th scope="col">Čas</th>
          <th scope="col">Od Uzlu</th>
          <th scope="col" style="word-wrap: break-word;min-width: 400px;">Zpráva</th>
        </tr>
      </thead>
      <tbody id="chatTableBody">
        {% for message in chat %}
        <tr>
          <td>{{ datetime.fromtimestamp(message['ts_created']).strftime('%d.%m.%Y %H:%M:%S') }}</td>
          {% if message["from"] in nodes %}
          <td><a href="node_{{ message['from'] }}.html">{{ nodes[message["from"]].long_name+" (" +
              nodes[message["from"]].short_name + ")" }}</a></td>
          {% else %}
          <td>{{ message["from"] }}</td>
          {% endif %}
          <td style="word-break: break-word;">{{ message["text"] }}</td>
        </tr>
        {% endfor %}
      </tbody>
    </table>
  </div>
</div>

<script>
function renderChat(data) {
  const tableBody = document.getElementById('chatTableBody');
  tableBody.innerHTML = '';
  data.forEach(message => {
    const row = document.createElement('tr');
    // Čas
    const timeCell = document.createElement('td');
    const timestamp = new Date(message.ts_created * 1000);
    timeCell.textContent = timestamp.toLocaleString('cs-CZ');
    row.appendChild(timeCell);

    // Od Uzlu
    const fromCell = document.createElement('td');
    if (message.from_link) {
      fromCell.innerHTML = `<a href="${message.from_link}">${message.from_name}</a>`;
    } else {
      fromCell.textContent = message.from;
    }
    row.appendChild(fromCell);

    // Zpráva
    const messageCell = document.createElement('td');
    messageCell.textContent = message.text;
    messageCell.style.wordBreak = 'break-word';
    row.appendChild(messageCell);

    tableBody.appendChild(row);
  });
}

function fetchChatMessages() {
  fetch('/api/chat')
    .then(response => response.json())
    .then(renderChat)
    .catch(error => console.error('Chyba při načítání zpráv:', error));
}

window.addEventListener('DOMContentLoaded', fetchChatMessages);
setInterval(fetchChatMessages, 15000);
</script>
{% endblock %}